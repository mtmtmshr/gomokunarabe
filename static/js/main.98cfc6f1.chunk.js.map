{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","calculateWinner","squares","k","i","j","Board","this","items","rows","text","renderSquare","push","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","step","setState","slice","length","concat","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.98cfc6f1.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button\n      className=\"square\"\n      onClick = {props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const row_size = 19;\n  const col_size = 19;\n  let k;\n  for (let i = 0; i < row_size; i++) {\n    for (let j = 0; j < col_size; j++) {\n      if ( squares[i*col_size+j] ) {\n        // 横列\n        for ( k = 1; k < 5 && j+k <= col_size ; k++ ) {\n          if ( squares[i*col_size+j] !== squares[i*col_size+j+k] ) {\n            break;\n          }\n        }\n        if ( k === 5 ) {\n          return squares[i*col_size+j];\n        }\n\n        // 縦列\n        for ( k = 1; k < 5 && i+k <= row_size; k++ ) {\n          if ( squares[i*col_size+j] !== squares[(i+k)*col_size+j] ) {\n            break;\n          }\n        }\n        if ( k === 5 ) {\n          return squares[i*col_size+j];\n        }\n\n        // 右下斜め\n        for ( k = 1; k < 5 && i+k <= row_size && j+k <= col_size; k++ ) {\n          if ( squares[i*col_size+j] !== squares[(i+k)*col_size+j+k] ) {\n            break;\n          }\n        }\n        if ( k === 5 ) {\n          return squares[i*col_size+j];\n        }\n\n        // 左下斜め\n        for ( k = 1; k < 5 && i+k <= row_size && j-k >= 0; k++ ) {\n          if ( squares[i*col_size+j] !== squares[(i+k)*col_size+j-k] ) {\n            break;\n          }\n        }\n        if ( k === 5 ) {\n          return squares[i*col_size+j];\n        }\n      }\n    }\n  }\n  return null;\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    const items = [];\n    const row_size = 19;\n    const col_size = 19;\n    for (let i = 0; i < row_size; i++) {\n      const rows = [];\n      for (let j = 0; j < col_size; j++) {\n        let text = <span className=\"board-col\">{this.renderSquare(i*col_size+j)}</span>\n        rows.push(\n          text\n        )\n      }\n      items.push(<div className=\"board-row\">{rows}</div>)\n    }\n    return (\n      <div>\n        {items}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    }\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length-1]\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    if (this.state.xIsNext) {\n      squares[i] = \"⚫️\";\n    } else {\n      squares[i] = \"⚪️\";\n    }\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>\n            {desc}\n          </button>\n        </li>\n      );\n    });\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      if (this.state.xIsNext) {\n        status = 'Next player: ⚫️';\n      } else {\n        status = 'Next player: ⚪️';\n      }\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{ status }</div>\n          <ol>{ moves }</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}