{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","calculateWinner","squares","lines","i","length","a","b","c","k","j","Board","this","items","rows","text","renderSquare","push","React","Component","Game","state","history","Array","fill","stepNumber","xIsNext","step","setState","slice","concat","status","current","winner","moves","map","move","desc","key","jumpTo","handleClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.319412d7.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nfunction Square(props) {\n  return (\n    <button\n      className=\"square\"\n      onClick = {props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  const row_size = 19;\n  const col_size = 19;\n  let k;\n  for (let i = 0; i < row_size; i++) {\n    for (let j = 0; j < col_size; j++) {\n      if ( squares[i*col_size+j] ) {\n        // 横列\n        for ( k = 1; k < 5 && j+k >= col_size ; k++ ) {\n          if ( squares[i*col_size+j] !== squares[i*col_size+j+k] ) {\n            break;\n          }\n        }\n        if ( k === 5 ) {\n          return squares[i*col_size+j];\n        }\n\n        // 縦列\n        for ( k = 1; k < 5 && i+k <= row_size; k++ ) {\n          if ( squares[i*col_size+j] !== squares[(i+k)*col_size+j] ) {\n            break;\n          }\n        }\n        if ( k === 5 ) {\n          return squares[i*col_size+j];\n        }\n\n        // 右下斜め\n        for ( k = 1; k < 5 && i+k <= row_size && j+k <= col_size; k++ ) {\n          if ( squares[i*col_size+j] !== squares[(i+k)*col_size+j+k] ) {\n            break;\n          }\n        }\n        if ( k === 5 ) {\n          return squares[i*col_size+j];\n        }\n\n        // 左下斜め\n        for ( k = 1; k < 5 && i+k <= row_size && j-k >= 0; k++ ) {\n          if ( squares[i*col_size+j] !== squares[(i+k)*col_size+j-k] ) {\n            break;\n          }\n        }\n        if ( k === 5 ) {\n          return squares[i*col_size+j];\n        }\n      }\n    }\n  }\n  return null;\n}\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return (\n      <Square\n        value={this.props.squares[i]}\n        onClick={() => this.props.onClick(i)}\n      />\n    );\n  }\n\n  render() {\n    const items = [];\n    const row_size = 19;\n    const col_size = 19;\n    for (let i = 0; i < row_size; i++) {\n      const rows = [];\n      for (let j = 0; j < col_size; j++) {\n        let text = <span className=\"board-col\">{this.renderSquare(i*col_size+j)}</span>\n        rows.push(\n          text\n        )\n      }\n      items.push(<div className=\"board-row\">{rows}</div>)\n    }\n    return (\n      <div>\n        {items}\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [{\n        squares: Array(9).fill(null),\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n    }\n  }\n\n  jumpTo(step) {\n    this.setState({\n      stepNumber: step,\n      xIsNext: (step % 2) === 0,\n    });\n  }\n\n  handleClick(i) {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1);\n    const current = history[history.length-1]\n    const squares = current.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    if (this.state.xIsNext) {\n      squares[i] = \"⚫️\";\n    } else {\n      squares[i] = \"⚪️\";\n    }\n    this.setState({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      stepNumber: history.length,\n      xIsNext: !this.state.xIsNext,\n    });\n  }\n\n  render() {\n    const history = this.state.history;\n    const current = history[this.state.stepNumber];\n    const winner = calculateWinner(current.squares);\n    const moves = history.map((step, move) => {\n      const desc = move ?\n        'Go to move #' + move :\n        'Go to game start';\n      return (\n        <li key={move}>\n          <button onClick={() => this.jumpTo(move)}>\n            {desc}\n          </button>\n        </li>\n      );\n    });\n    let status;\n    if (winner) {\n      status = \"Winner: \" + winner;\n    } else {\n      if (this.state.xIsNext) {\n        status = 'Next player: ⚫️';\n      } else {\n        status = 'Next player: ⚪️';\n      }\n    }\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={current.squares}\n            onClick={(i) => this.handleClick(i)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{ status }</div>\n          <ol>{ moves }</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\n// ========================================\n\nReactDOM.render(\n  <Game />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}